{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/workspace/TUC/Thesis/Aimilios/Frontend/wotemulator/app/home/page.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\n\"use client\"\r\nimport App from \"next/app\";\r\nimport Image from 'next/image';\r\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\r\n\r\n\r\n\r\ninterface Message {\r\n    topic: string;\r\n    messages: unknown[];\r\n}\r\n\r\ninterface AppData {\r\n    messages: Message[];\r\n    protocol: string;\r\n}\r\nexport default function Home() {\r\n    const [appState, setAppState] = useState<AppData>(\r\n        {\r\n            messages: [],\r\n            protocol: \"KAFKA\"\r\n        }\r\n    );\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"flex  flex-col  items-center justify-center h-screen  w-screen   bg-slate-500 space-y-2 \">\r\n            <MainContainer appState={appState} setAppState={setAppState} />\r\n        </div>);\r\n\r\n}\r\n\r\n\r\n\r\ninterface AppProps {\r\n    appState: AppData;\r\n    setAppState: unknown;\r\n}\r\nfunction MainContainer(props: AppProps) {\r\n    const [topicCount, setTopicCount] = useState(0);\r\n    const topics: React.ReactNode[] = [];\r\n\r\n    // Button Handler\r\n    const addHandler = () => {\r\n        // Copy app state\r\n        // eslint-disable-next-line prefer-const\r\n        let appStateCopy = { ...props.appState };\r\n\r\n        // Append a new topic with empty messages\r\n        appStateCopy.messages.push(\r\n            {\r\n                topic: \"Default Topic \" + topicCount.toString(),\r\n                messages: []\r\n            }\r\n        )\r\n        // Error checking\r\n        if (typeof props.setAppState !== \"function\") {\r\n            return;\r\n        }\r\n        // Set component state (just a simple topic counter)\r\n        setTopicCount(topicCount + 1);\r\n        // Set app state\r\n        props.setAppState(appStateCopy);\r\n\r\n    }\r\n\r\n    // For every topic generate a TopicContainer\r\n    if (typeof props.appState === \"object\" && props.appState !== null) {\r\n\r\n        // Loop through each topic and create a TopicContainer\r\n        for (let i = 0; i < props.appState.messages.length; i++) {\r\n            topics.push(<TopicContainer\r\n                key={props.appState.messages[i][\"topic\"]}\r\n                appState={props.appState}\r\n                setAppState={props.setAppState}\r\n                topicID={props.appState.messages[i][\"topic\"]} />\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"flex flex-col overflow-y-scroll  w-1/3 space-y-2 bg-orange-100 rounded-md p-2\">\r\n            <div className=\"flex flex-col  space-y-2 w-full\">\r\n                {topics}\r\n            </div>\r\n            <ProtocolContainer appState={props.appState} setAppState={props.setAppState} />\r\n            <div className=\"flex flex-row  justify-end w-full\">\r\n                <button className=\"btn btn-active btn-primary  rounded-md\" onClick={addHandler}>Add Topic</button>\r\n            </div>\r\n            <button className=\"btn btn-active btn-primary object-none object-right-top\" onClick={() => { console.log(JSON.stringify(props.appState)); }}>Send</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\ninterface TopicContainerProps extends AppProps {\r\n    topicID: string;\r\n}\r\nfunction TopicContainer(props: TopicContainerProps) {\r\n    const [activeTopicID, setActiveTopicID] = useState<string>(props.topicID); // The topicID that is currently active (used for search and assign operations)\r\n    const [currentTopicID, setCurrentTopicID] = useState<string>(props.topicID); // The new topicID that will replace the active one\r\n    const [topicMessages, setTopicMessages] = useState<unknown[]>([]);\r\n    const [generatedMessages, setGeneratedMessages] = useState<number>(0); // Count user generated messages\r\n\r\n    // Run once to load the messages\r\n    useEffect(() => {\r\n        let temp: unknown[] = [];\r\n        for (let i = 0; i < props.appState.messages.length; i++) {\r\n            if (props.appState.messages[i][\"topic\"] === activeTopicID) {\r\n                temp = props.appState.messages[i][\"messages\"];\r\n\r\n                break;\r\n            }\r\n        }\r\n        setTopicMessages(temp);\r\n    }, []);\r\n\r\n    // Message Display\r\n    // eslint-disable-next-line prefer-const\r\n    let displayMessages: React.ReactNode[] = [];\r\n    if (Array.isArray(topicMessages)) {\r\n        for (let i = 0; i < topicMessages.length; i++) {\r\n            displayMessages.push(<SingleMessage key={activeTopicID + \"_\" + i.toString()} messageIndex={i} appState={props.appState} setAppState={props.setAppState} topicID={activeTopicID} />);\r\n        }\r\n    }\r\n\r\n    // ============================== Handlers ==============================\r\n    const topicChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCurrentTopicID(event.target.value);\r\n    }\r\n\r\n    const saveHandler = () => {\r\n        // check empty\r\n        if (currentTopicID.trim().length === 0) {\r\n            alert(\"Topic cannot be empty\");\r\n            return\r\n        }\r\n        setActiveTopicID(currentTopicID);\r\n        // eslint-disable-next-line prefer-const\r\n        let appStateCopy = { ...props.appState };\r\n        for (let i = 0; i < appStateCopy.messages.length; i++) {\r\n            if (appStateCopy.messages[i][\"topic\"] === activeTopicID) {\r\n                appStateCopy.messages[i][\"topic\"] = currentTopicID;\r\n\r\n                // Error checking\r\n                if (typeof props.setAppState !== \"function\") {\r\n                    return;\r\n                }\r\n                props.setAppState(appStateCopy);\r\n            }\r\n        }\r\n    }\r\n\r\n    const addMessageHandler = () => {\r\n        // eslint-disable-next-line prefer-const\r\n        let copyTopicMessages: unknown[] = [...topicMessages];\r\n\r\n        copyTopicMessages.push({ \"messageID\": activeTopicID + \"_MessageID_\" + generatedMessages.toString() });\r\n\r\n        // Component state\r\n        setGeneratedMessages(generatedMessages + 1);\r\n        setTopicMessages(copyTopicMessages);\r\n\r\n        // App state\r\n        let appStateCopy = { ...props.appState }\r\n        for (let i = 0; i < appStateCopy.messages.length; i++) {\r\n            if (appStateCopy.messages[i]['topic'] === activeTopicID) {\r\n                appStateCopy.messages[i]['messages'] = copyTopicMessages\r\n                break\r\n            }\r\n        }\r\n        if (typeof props.setAppState === 'function') {\r\n            props.setAppState(appStateCopy)\r\n        }\r\n    }\r\n    // ============================== Handlers ==============================\r\n\r\n\r\n    return (\r\n        <div className=\"flex flex-col  space-x-2   border-2 border-gray-500 rounded-md p-2\">\r\n            <div className=\"flex flex-row  space-x-2 items-center\">\r\n                <label>Topic:</label>\r\n                <input onChange={topicChangeHandler} type=\"text\" value={currentTopicID} className=\"input input-bordered w-full max-w-xs bg-white\" />\r\n                <button className=\"btn btn-active btn-success rounded-md\" onClick={saveHandler}>Save</button>\r\n            </div>\r\n            <br />\r\n            <div className=\"flex flex-col items-start  space-y-2 w-full\">\r\n                <div className=\"grid grid-cols-2 gap-4 w-full items-center justify-between\">\r\n                    <div>\r\n                        <label>Messages:</label>\r\n                    </div>\r\n                    <div className=\"justify-self-end\">\r\n                        <button className=\"btn btn-active btn-primary   \" onClick={addMessageHandler}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full flex flex-col space-y-4\">\r\n                    {displayMessages}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface SingleMessageProps extends AppProps {\r\n    topicID: string;\r\n    messageIndex: number;\r\n}\r\n\r\nfunction SingleMessage(props: SingleMessageProps) {\r\n    const [activeMessageID, setActiveMessageID] = useState(\"-1\");\r\n    // First time load of messageID\r\n    if (activeMessageID === \"-1\") {\r\n        let thisTopicMessages: unknown[] = []\r\n        // First find all topic messages\r\n        for (let i = 0; i < props.appState.messages.length; i++) {\r\n            if (props.appState.messages[i][\"topic\"] === props.topicID) {\r\n                thisTopicMessages = [...props.appState.messages[i]['messages']]\r\n            }\r\n        }\r\n        // Then search by index to find messageID\r\n        for (let i = 0; i < thisTopicMessages.length; i++) {\r\n            if (i === props.messageIndex) {\r\n\r\n                if (typeof thisTopicMessages[i] === \"object\" && thisTopicMessages[i] !== null) {\r\n                    if (\"messageID\" in thisTopicMessages[i]) {\r\n                        setActiveMessageID(thisTopicMessages[i]['messageID']);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    const messageID_Handler = (event: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        let appStateCopy: AppData = { ...props.appState }\r\n\r\n        // Update app state\r\n        for (const msg of appStateCopy['messages']) {\r\n            if (msg['topic'] === props.topicID) {\r\n                for (const singleMsg of msg['messages']) {\r\n                    if (singleMsg['messageID'] === activeMessageID) {\r\n                        singleMsg['messageID'] = event.target.value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (typeof props.appState === \"function\") {\r\n            props.setAppState(appStateCopy)\r\n        }\r\n        setActiveMessageID(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div id='SingleMessageContainer' className=\"flex flex-col w-full  \">\r\n            <div id='messageIDContainer' className=\"flex flex-row space-x-2 w-full items-center\">\r\n                <label>MessageID:</label>\r\n                <input type=\"text\" value={activeMessageID} className=\"input input-bordered w-full max-w-xs bg-white input-sm\" onChange={messageID_Handler} />\r\n                <button className=\"btn btn-active btn-warning   \" onClick={() => { console.log(\"Delete\") }}>Delete</button>\r\n            </div>\r\n            <div id='fieldContainer' className=\"grid grid-cols-1\">\r\n                <label>This is a message!</label>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-active btn-warning   \" onClick={() => { console.log(\"Delete\") }}>add</button>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction ProtocolContainer(props: AppProps) {\r\n    const [selectedProtocol, setSelectedProtocol] = useState(props.appState.protocol);\r\n    const AvailableProtocols = {\r\n        KAFKA: \"KAFKA\",\r\n        MQTT: \"MQTT\",\r\n    }\r\n\r\n    const protocolOptions: React.ReactNode[] = [];\r\n    for (const protocol in AvailableProtocols) {\r\n        protocolOptions.push(<option key={protocol} value={protocol}>{protocol}</option>);\r\n    }\r\n\r\n    const protocolChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        // eslint-disable-next-line prefer-const\r\n        let appStateCopy = { ...props.appState };\r\n        appStateCopy.protocol = event.target.value;\r\n        setSelectedProtocol(event.target.value);\r\n        // Error checking\r\n        if (typeof props.setAppState !== \"function\") {\r\n            return;\r\n        }\r\n        props.setAppState(appStateCopy);\r\n    }\r\n    return (\r\n        <div className=\"flex flex-row items-center space-x-2\">\r\n            <label>Protocol:</label>\r\n            <select className=\"select w-full max-w-xs bg-white\" value={selectedProtocol} onChange={protocolChangeHandler}>\r\n                {protocolOptions}\r\n            </select>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// Check if messageID already exist in topic\r\nfunction MessageIDValidation(appState: unknown, newID: string, topicID: string, activeMsgID: string) {\r\n\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/workspace/TUC/Thesis/Aimilios/Frontend/wotemulator/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/workspace/TUC/Thesis/Aimilios/Frontend/wotemulator/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/workspace/TUC/Thesis/Aimilios/Frontend/wotemulator/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}