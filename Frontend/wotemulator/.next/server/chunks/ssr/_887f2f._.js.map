{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/workspace/TUC/Thesis/1%29Aimilios/Frontend/wotemulator/app/home/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/home/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/home/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/workspace/TUC/Thesis/1%29Aimilios/Frontend/wotemulator/app/home/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/home/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/home/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiQ,GAC9R,+BACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/workspace/TUC/Thesis/1%29Aimilios/Frontend/wotemulator/app/api/apiCommunicator.tsx"],"sourcesContent":["\"use server\"\r\ninterface AppData {\r\n    messages: Message[];\r\n    protocol: string;\r\n}\r\ninterface Message {\r\n    topic: string;\r\n    messages: unknown[];\r\n}\r\n\r\ninterface ServerResponse{\r\n    error:string,\r\n    [key:string]:string\r\n}\r\n\r\nasync function DataFetch(data:AppData):Promise<ServerResponse> {\r\n    const BACKEND_URL: string = \"http://127.0.0.1:8080/messages/create\"\r\n    \r\n    try {\r\n        const response = await fetch(BACKEND_URL,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json', // Important: Tell the server you're sending JSON\r\n                },\r\n                body: JSON.stringify(data), // Convert your data to JSON\r\n            })\r\n\r\n        // Check if the response is ok (status code 200-299)\r\n        if (!response.ok) {\r\n            console.log(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const serverResp:ServerResponse  = await response.json() as ServerResponse\r\n        return serverResp\r\n    } catch (error) {\r\n        console.log(error);\r\n        return { error: 'true' };\r\n    }\r\n}\r\n\r\n\r\nexport { DataFetch }"],"names":[],"mappings":";;;;;;;;AAeA,eAAe,UAAU,IAAY;IACjC,MAAM,cAAsB;IAE5B,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,aACzB;YACI,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;QACzB;QAEJ,oDAAoD;QACpD,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,QAAQ,GAAG,CAAC,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QACxD;QACA,MAAM,aAA6B,MAAM,SAAS,IAAI;QACtD,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC;QACZ,OAAO;YAAE,OAAO;QAAO;IAC3B;AACJ;;;;IAGS,uCAAO,GAAP;;AAAA,+OAAA"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}